{"version":3,"sources":["components/Search.tsx","components/HomeView.tsx","components/RecipeView.tsx","modules.ts","App.tsx","index.tsx"],"names":["Search","props","autoFocus","placeholder","value","searchVal","onChange","event","onSearch","target","onClick","className","icon","close","HomeView","recipeTiles","recipes","recipe","summary","ingredients","map","val","name","concat","garnish","slice","push","to","replace","key","index","RecipeView","ingredientElems","path","useLocation","pathname","split","recipeKey","length","get","amount","unit","ingredient","category","preparation","Ingredient","obj","special","usedUnit","filter","includes","trim","this","label","Recipe","glass","withRouter","recipesJSON","require","Array","from","recipeMap","Map","loadRecipes","keywordMap","keywords","toLowerCase","mapVal","set","generateKeywordMap","handleSearch","fromUrl","history","encodeURIComponent","lowerSearch","results","word","keyResult","resultRecipe","priority","resultArray","values","sortedResult","sort","a","b","location","search","decodeURIComponent","searchResult","href","rel","style","marginTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bd07dba.chunk.js","sourcesContent":["import close from \"@iconify/icons-mdi/close-circle\";\nimport { Icon } from \"@iconify/react\";\nimport React from \"react\";\nimport \"./Search.css\";\n\ninterface Props {\n    searchVal: string;\n    onSearch: (val: string) => void;\n}\n\nfunction Search(props: Props) {\n    return (\n        <span>\n            <input\n                autoFocus\n                placeholder=\"I have some...\"\n                value={props.searchVal}\n                onChange={event => props.onSearch(event.target.value)}\n            />\n            {props.searchVal ? (\n                <span onClick={() => props.onSearch(\"\")}>\n                    <Icon className=\"closeIcon\" icon={close} />\n                </span>\n            ) : (\n                <span />\n            )}\n        </span>\n    );\n}\n\nexport default Search;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Recipe } from \"../modules\";\nimport \"./HomeView.css\";\nimport Search from \"./Search\";\n\ninterface Props {\n    recipes: Recipe[];\n    searchVal: string;\n    onSearch: (val: string) => void;\n}\n\nexport default function HomeView(props: Props) {\n    const recipeTiles: JSX.Element[] = [];\n    for (const recipe of props.recipes) {\n        let summary: string[] = recipe.ingredients.map(val => val.name);\n        summary = summary.concat(recipe.garnish).slice(0, 2);\n\n        recipeTiles.push(\n            <Link\n                to={`/drink/${recipe.name.replace(/ /g, \"_\")}`}\n                key={recipe.name}\n            >\n                <div className=\"recipeTile\">\n                    <h3>{recipe.name}</h3>\n                    <ul>\n                        {summary.map((val, index) => (\n                            <li key={index}>{val}</li>\n                        ))}\n                        <li className=\"ellipse\" key={3}>\n                            ...\n                        </li>\n                    </ul>\n                </div>\n            </Link>\n        );\n    }\n    return (\n        <span>\n            <div className=\"bgImage\" />\n            <div className=\"bgFilter\">\n                <div className=\"logo\">What to Drink</div>\n                <Search searchVal={props.searchVal} onSearch={props.onSearch} />\n            </div>\n            <div className=\"recipeList\">{recipeTiles}</div>\n        </span>\n    );\n}\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Recipe } from \"../modules\";\nimport \"./RecipeView.css\";\n\ninterface Props {\n    recipes: Map<string, Recipe>;\n}\n\nfunction RecipeView(props: Props) {\n    const ingredientElems = [];\n    const path = useLocation().pathname.split(\"/\");\n    const recipeKey = path[path.length - 1];\n    const recipe = props.recipes.get(recipeKey);\n\n    if (recipe) {\n        for (const val of recipe.ingredients) {\n            ingredientElems.push(\n                <span>\n                    {val.amount}&nbsp;\n                    {val.unit}&nbsp;\n                    {val.ingredient}\n                </span>\n            );\n        }\n        return (\n            <div className=\"Recipe\">\n                <h2>{recipe.name}</h2>\n                <em>{recipe.category}</em>\n                <h3>Ingredients</h3>\n                <ul>\n                    {ingredientElems.map((val, index) => (\n                        <li key={index}>{val}</li>\n                    ))}\n                </ul>\n                <h3>Preparation</h3>\n                <p>{recipe.preparation}</p>\n                {recipe.garnish ? (\n                    <p>Garnish with a {recipe.garnish}</p>\n                ) : (\n                    <span />\n                )}\n            </div>\n        );\n    } else {\n        return <span>404 could not find recipe {recipeKey}</span>;\n    }\n}\n\nexport default RecipeView;\n","export class Ingredient {\n    name: string;\n    amount: string;\n    unit: string;\n    ingredient: string;\n\n    constructor(obj: any) {\n        if (obj.special) {\n            const special: string = obj.special;\n            const knownUnits = [\n                \"dashes\",\n                \"dash\",\n                \"drops\",\n                \"drop\",\n                \"teaspoon\",\n                \"teaspoons\",\n                \"bar spoon\",\n                \"bar spoons\"\n            ];\n            // First split by unit to get the amount\n            const usedUnit = knownUnits.filter(val => special.includes(val))[0];\n            let [amount, name] = special.split(usedUnit).map(val => val.trim());\n            this.amount = amount;\n            this.unit = usedUnit;\n            this.ingredient = name;\n            this.name = name ? name : special;\n        } else {\n            if (obj.label) {\n                this.name = obj.label;\n            } else {\n                this.name = obj.ingredient;\n            }\n            this.amount = obj.amount;\n            this.unit = obj.unit;\n            this.ingredient = obj.ingredient;\n        }\n    }\n}\n\nexport class Recipe {\n    name: string;\n    key: string;\n    category: string;\n    ingredients: Array<Ingredient>;\n    preparation: string;\n    garnish: string;\n    glass: string;\n\n    constructor(obj: any) {\n        this.name = obj.name;\n        this.key = obj.name.replace(/ /g, \"_\");\n        this.category = obj.category;\n        this.ingredients = obj.ingredients.map(\n            (val: any) => new Ingredient(val)\n        );\n        this.preparation = obj.preparation;\n        this.garnish = obj.garnish;\n        this.glass = obj.glass;\n    }\n}\n","import React from \"react\";\nimport { Link, Route, Switch, withRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport HomeView from \"./components/HomeView\";\nimport RecipeView from \"./components/RecipeView\";\nimport { Recipe } from \"./modules\";\n\nfunction loadRecipes(): [Recipe[], Map<string, Recipe>] {\n    const recipesJSON = require(\"./data/recipes.json\");\n    const recipes = Array.from(recipesJSON).map(val => new Recipe(val));\n    const recipeMap = new Map(recipes.map(val => [val.key, val]));\n    return [recipes, recipeMap];\n}\n\nfunction generateKeywordMap(recipes: Recipe[]): Map<string, Recipe[]> {\n    // Map of keywords => recipes for searching\n    const keywordMap = new Map<string, Recipe[]>();\n    for (const recipe of recipes) {\n        let keywords: string[] = recipe.ingredients.map(val => val.name);\n        keywords = keywords.concat(recipe.name.split(\" \"));\n        keywords = keywords.concat(\n            recipe.garnish ? recipe.garnish.split(\" \") : []\n        );\n        keywords = keywords.map(val => val.toLowerCase().replace(/\\s/g, \"\"));\n\n        for (const key of keywords) {\n            const mapVal = keywordMap.get(key);\n            if (mapVal) {\n                keywordMap.set(key, mapVal.concat(recipe));\n            } else {\n                keywordMap.set(key, [recipe]);\n            }\n        }\n    }\n    return keywordMap;\n}\n\nfunction App(props: any) {\n    const [recipes, recipeMap] = loadRecipes();\n    const keywordMap = generateKeywordMap(recipes);\n\n    function handleSearch(val: string, fromUrl: boolean = false): Recipe[] {\n        if (!fromUrl) {\n            props.history.replace(\"?search=\" + encodeURIComponent(val));\n        }\n        const lowerSearch = val.toLowerCase();\n        if (lowerSearch.trim() === \"\") {\n            return [];\n        } else {\n            let results: Map<\n                string,\n                { recipe: Recipe; priority: number }\n            > = new Map();\n\n            for (const word of lowerSearch.split(/ |,/g)) {\n                if (word.trim() !== \"\") {\n                    let keyResult: Recipe[] = [];\n                    for (const [key, value] of Array.from(keywordMap)) {\n                        if (key.includes(word)) {\n                            keyResult = keyResult.concat(value);\n                        }\n                    }\n                    if (keyResult) {\n                        for (const recipe of keyResult) {\n                            const resultRecipe = results.get(recipe.key);\n                            if (resultRecipe) {\n                                resultRecipe.priority += 1;\n                            } else {\n                                results.set(recipe.key, {\n                                    recipe: recipe,\n                                    priority: 1\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n\n            const resultArray = Array.from(results.values());\n\n            // sort the results by priority\n            const sortedResult = resultArray.sort(\n                (a, b) => b.priority - a.priority\n            );\n\n            return sortedResult.map(val => val.recipe);\n        }\n    }\n\n    let searchVal = \"\";\n    if (props.location && props.location.search) {\n        searchVal = decodeURIComponent(props.location.search)\n            .replace(\"?search=\", \"\")\n            .replace(\"%20\", \" \");\n    }\n    const searchResult = handleSearch(searchVal, true);\n\n    // =========================  Rendering  ========================= //\n    return (\n        <div className=\"App\">\n            <span className=\"appBody\">\n                <Switch>\n                    <Route path=\"/drink/\">\n                        <RecipeView recipes={recipeMap} />\n                    </Route>\n                    <Route path=\"/\">\n                        <HomeView\n                            recipes={\n                                searchResult.length > 0 ? searchResult : recipes\n                            }\n                            onSearch={handleSearch}\n                            searchVal={searchVal}\n                        />\n                    </Route>\n                </Switch>\n            </span>\n\n            <footer>\n                <div className=\"footerContainer\">\n                    <Link to=\"/\" className=\"logo\">\n                        What to Drink\n                    </Link>\n                    <div>\n                        &#169;{\" \"}\n                        <a\n                            href=\"https://henry.nz\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            Henry Seed\n                        </a>{\" \"}\n                        2020\n                    </div>\n                    <div style={{ marginTop: \"10px\" }}>\n                        <a\n                            href=\"https://github.com/HenrySeed/What-to-Drink\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            Github\n                        </a>\n                    </div>\n                </div>\n            </footer>\n        </div>\n    );\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}